plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
    id 'io.freefair.lombok' version '6.0.0-m2'
}

repositories {
    mavenCentral()
}

def junitVersion = "5.7.1",
    selenideVersion = "5.20.1",
    assertjVersion = "3.19.0",
    restAssuredVersion = "4.3.1",
    allureVersion = "2.13.9",
    jacksonVersion = "2.10.3",
    ownerVersion = "1.0.12"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.slf4j:slf4j-simple:1.7.30",
            "org.assertj:assertj-core:3.19.0",
            "com.fasterxml.jackson.core:jackson-databind:2.11.2",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
